{"version":3,"sources":["./src/app/core/http/api-prefix.interceptor.ts","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/feature/twitter/component/user-post/user-post.component.ts","./src/app/feature/twitter/component/user-post/user-post.component.html","./src/app/shared/services/common.service.ts","./src/app/feature/twitter/service/twitter.service.ts","./src/environments/environment.ts","./src/app/feature/twitter/component/user-profile/user-profile.component.html","./src/app/feature/twitter/component/user-profile/user-profile.component.ts","./src/app/feature/twitter/service/index.ts","./src/app/core/http/error-handler.interceptor.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/feature/feature.module.ts","./src/app/shared/landing/landing.component.ts","./src/app/shared/landing/landing.component.html","./src/app/app.module.ts","./src/app/feature/twitter/component/main/main.component.ts","./src/app/feature/twitter/component/main/main.component.html","./src/app/core/http/http-request.service.ts","./src/app/core/logger.service.ts","./src/app/shared/leftpane/leftpane.component.ts","./src/app/shared/leftpane/leftpane.component.html","./src/app/feature/twitter/component/user-feed/user-feed.component.html","./src/app/feature/twitter/component/user-feed/user-feed.component.ts","./src/app/shared/loader/loader.component.html","./src/app/shared/loader/loader.component.ts","./src/app/core/core.module.ts","./src/app/feature/feature-routing.module.ts","./src/app/app-routing.module.ts","./src/app/feature/twitter/component/index.ts","./src/app/shared/loader/service/loader.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/core/route-reusable-strategy.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\n\n/**\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!/^(http|https):/i.test(request.url) && isDevMode()) {\n      request = request.clone({ url: environment.serverUrl + request.url });\n    }\n    return next.handle(request);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  public appName = 'Twitter Technical Assessment';\n\n}\n","<header class=\"header_block container-fluid\">\n            <h2 id=\"app-name\">{{appName}}</h2>\n</header>","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TwitterService, ITweetUserProfile } from '../../service';\nimport { Logger } from '../../../../core/logger.service';\n\n@Component({\n    selector: 'app-user-post',\n    templateUrl: './user-post.component.html',\n    styleUrls: ['./user-post.component.scss'],\n})\nexport class UserPostComponent implements OnInit {\n    @Input() \n    public userheadlines: any;\n    @Input() \n    public usertimelines: any;\n    @Input()\n    public usermentionslines: any;\n    public tweet: string;\n    public fileName = `UserPostComponent`;\n\n\n    constructor(\n        public twitterService: TwitterService,\n        public logger: Logger\n    ) {}\n\n    ngOnInit(): void {\n        this.logger.debug(this.fileName, `userFeeddata`);\n        this.logger.debug(this.fileName, this.userheadlines);\n    }\n\n    postTweet = () => {\n        this.logger.debug(this.fileName, `post tweet`);\n        this.logger.debug(this.fileName, this.tweet);\n        const reqObj = { status: this.tweet};\n        this.twitterService.postUserTweet(reqObj).subscribe(this.postedTweet);\n    }\n\n    public postedTweet = (result: any) => {\n      this.logger.debug(this.fileName, `postedTweet`);\n      this.logger.debug(this.fileName, result);\n      this.showModal(result);\n      \n    }\n\n    public showModal = (result) => {\n        this.tweet = '';\n        if (result.data && result.resp.statusCode === 200){\n            alert(`Successfully posted. Please refresh the page`);\n        } else{\n            alert(` Sorry Content already posted | Server configuration is not correct`);\n        }\n    }\n}\n","\n\n<label class=\"app-user-post__lbl\">Post your Tweet</label><br>\n\n<div class=\"p-fluid p-grid app-user-post__tweet-area\">\n<div class=\"p-field p-col-1\">\n    <span class=\"p-float-label\">\n      <textarea\n        inputId=\"tweetArea\"\n        rows=\"3\"\n        cols=\"30\"\n        [(ngModel)]=\"tweet\"\n        pInputTextarea\n      ></textarea>\n      <label for=\"textarea\">Post your tweet...</label>\n    </span>\n</div><br>\n</div>\n<p-button label=\"Tweet\" (click)=\"postTweet()\"></p-button>\n\n\n<div class=\"app-user-post__tab-area\">\n    <p-tabView>\n        <p-tabPanel header=\"Tweets\">\n            <app-user-feed [userfeeddata]=\"usertimelines\"></app-user-feed>\n        </p-tabPanel>\n        <p-tabPanel header=\"Tweets & Retweets\">\n           <app-user-feed [userfeeddata]=\"userheadlines\"></app-user-feed>\n        </p-tabPanel>\n        <p-tabPanel header=\"Mentions\">\n            <app-user-feed [userfeeddata]=\"usermentionslines\"></app-user-feed>\n        </p-tabPanel>\n    </p-tabView>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpRequestService } from '../../core/http/http-request.service';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class CommonService {\n\n    public constructor(private _http: HttpRequestService) { }\n\n    public invokeEvent: Subject<any> = new Subject();\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { HttpRequestService } from '../../../core/http/http-request.service';\nimport { ITweetUserProfile, ITweetRecentTweets, ITweetUserHeadlines } from './twitter-feed.interface';\nimport { Logger } from '../../../core/logger.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TwitterService {\n    // tslint:disable-next-line: variable-name\n    constructor(private http: HttpRequestService, private logger: Logger) {}\n\n    getUserProfile(): Observable<any> {\n        this.logger.debug('getUserProfile');\n        return this.http\n            .get(`profile_info`)\n            .pipe(map((result) => this.mapGetUserProfile(result)));\n    }\n\n    getHomeTimeLine(): Observable<any> {\n        this.logger.debug('getHomeTimeLine');\n        return this.http\n            .get(`home_timeline`)\n            .pipe(map((result) => this.mapGetHomeTimeline(result)));\n    }\n\n    getUserTimeLine(): Observable<any> {\n        this.logger.debug('getUserTimeLine');\n        return this.http\n            .get(`user_timeline`)\n            .pipe(map((result) => this.mapGetHomeTimeline(result)));\n    }\n\n    getUserMentionsTimeLine(): Observable<any> {\n        this.logger.debug('getUserMentionsTimeLine');\n        return this.http\n            .get(`mentions_timeline`)\n            .pipe(map((result) => this.mapGetHomeTimeline(result)));\n    }\n\n    postUserTweet(req): Observable<any> {\n        this.logger.debug('postUserTweet', req);\n        return this.http.post(`post_tweet`, req);\n    }\n\n    mapGetUserProfile(result): ITweetUserProfile {\n        this.logger.debug('mapGetUserProfile', result);\n        return (result.resp && result.resp.statusCode === 200) ? result.data.data : null;\n    }\n\n    mapGetHomeTimeline(result): ITweetUserHeadlines[] {\n        this.logger.debug('mapGetHomeTimeline', result);\n        return (result.resp && result.resp.statusCode === 200) ? result.data : null;\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<ng-container *ngIf=\"(userprofiledata) as userProfile\">\n\t<!--{{userProfile?.name}}\n\t{{userProfile?.id}}\n\t{{userProfile?.profile_image_url}}\n\t{{userProfile?.location}}\n\t{{userProfile?.screen_name}} -->\n\n\t<div class=\"app-userprofile app-userprofile__left\">\n\t\t<div class=\"app-userprofile__centered\">\n\t\t\t<div class=\"app-userprofile__hdr\">User Profile Info</div>\n\t\t\t<img class=\"app-userprofile__centered--img\" [src]=\"userProfile?.profile_image_url\" alt=\"Twitter Avatar\">\n\t\t\t<div class=\"app-userprofile__centered__table\">\n\t\t\t\t<div class=\"app-userprofile__centered__table--row\" *ngIf=\"userProfile.name\">\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">Name</div>\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">{{userProfile?.name}}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"app-userprofile__centered__table--row\" *ngIf=\"userProfile.username\">\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">User Name</div>\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">{{userProfile?.username}}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"app-userprofile__centered__table--row\" *ngIf=\"userProfile.id\">\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">Id</div>\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">{{userProfile?.id}}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"app-userprofile__centered__table--row\"  *ngIf=\"userProfile.location\">\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">Location</div>\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">{{userProfile?.location}}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"app-userprofile__centered__table--row\"  *ngIf=\"userProfile.created_at\">\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">Joined</div>\n\t\t\t\t\t<div class=\"app-userprofile__centered__table--data\">{{userProfile?.created_at | date : 'MMM yyyy'}}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-container>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ITweetUserProfile } from '../../service';\nimport { Logger } from '../../../../core/logger.service';\n\n@Component({\n  selector: 'app-userprofile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserprofileComponent implements OnInit {\n  @Input() \n  public userprofiledata: Observable<ITweetUserProfile> = null;\n\n  constructor(private logger: Logger) { }\n\n  ngOnInit(): void {\n    this.logger.debug(`UserprofileComponent`, `Input value ${this.userprofiledata}` );\n  }\n}\n","export * from './twitter-feed.interface';\nexport * from './twitter.service';\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError, retryWhen, take, concat, mergeMap } from 'rxjs/operators';\n\nimport { Logger } from '../logger.service';\n\n// const log = new Logger('ErrorHandlerInterceptor');\n\nexport class HttpResponseWithMessage extends HttpResponse<any> {\n  public message?: string;\n}\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  public constructor(private _log: Logger) { }\n  \n  /**\n   * Intercept API error response\n   * @param  {HttpRequest<any>} request\n   * @param  {HttpHandler} next\n   * @returns Observable\n   */\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      retryWhen(error => {\n        return error.pipe(\n          mergeMap((errorData: any) => {\n            // retry only if error status is 500\n            return errorData.status === 500 ? of(errorData) : throwError(errorData);\n          }),\n          take(2),\n          concat(throwError(error)));\n      }),\n      catchError((error) => this.errorHandler(error)));\n  }\n\n  /**\n   * Customize the default error handler here if needed\n   * @param response \n   * @returns handler \n   */\n  private errorHandler(response: HttpResponseWithMessage): Observable<HttpResponseWithMessage> {\n    const errormessage = `url: ${response.url} status: ${response.status} statusText: ${response.statusText} body: ${response.body}`;\n    this._log.error('API error', errormessage);\n    throw response;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule as AngularCommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\n\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { TabViewModule } from 'primeng/tabview';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\n\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { HeaderComponent } from './header/header.component';\nimport { LeftpaneComponent } from './leftpane/leftpane.component';\nimport { AppLoaderComponent } from './loader/loader.component';\nimport { LandingComponent } from './landing/landing.component';\n\nimport { CommonService } from './services/common.service';\n\nimport { LoaderService } from './loader/service/loader.service';\n\nimport {\n    MainComponent,\n    UserprofileComponent,\n    UserPostComponent,\n    UserFeedComponent\n} from '../feature/twitter/component';\n\nconst modules = [\n\n    ButtonModule,\n    RippleModule,\n    TabViewModule,\n    InputTextareaModule\n];\n@NgModule({\n    imports: [\n        AngularCommonModule,\n        RouterModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ...modules,\n    ],\n    declarations: [\n        AppLoaderComponent,\n        HeaderComponent,\n        LeftpaneComponent,\n        LandingComponent,\n        MainComponent,\n        UserprofileComponent,\n        UserPostComponent,\n        UserFeedComponent\n    ],\n    providers: [\n        CommonService,\n    ],\n    exports: [\n        AngularCommonModule,\n        RouterModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        AppLoaderComponent,\n        HeaderComponent,\n        LeftpaneComponent,\n        LandingComponent,\n        ...modules,\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Logger } from './core/logger.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Twitter';\n}\n","<app-landing></app-landing>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FeatureRoutingModule } from './feature-routing.module';\n\n\n@NgModule({\n  declarations: [ ],\n  imports: [\n    CommonModule,\n    FeatureRoutingModule\n  ],\n  exports: []\n})\nexport class FeatureModule { }\n","import { Component } from '@angular/core';\n/**\n *\n *\n * @export\n * @class LandingComponent\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent{\n\n}\n","<div class=\"main_container\">\n    <app-header></app-header>\n    <router-outlet name=\"twitter-main\"></router-outlet>\n</div>\n<app-loader></app-loader>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { FeatureModule } from './feature/feature.module';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    FeatureModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport {\n    TwitterService,\n    ITweetUserProfile,\n    ITweetUserHeadlines,\n    ITweetResponse,\n} from '../../service';\nimport { Logger } from '../../../../core/logger.service';\n\n@Component({\n    selector: 'app-main',\n    templateUrl: './main.component.html',\n    styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit {\n    public userProfileAsyncResult$: Observable<any>;\n    public userFeedAsyncResult$: Observable<any>;\n    public fileName = `MainComponent`;\n\n    constructor(\n        public twitterService: TwitterService,\n        public logger: Logger\n    ) {}\n\n    ngOnInit(): void {\n        this.userFeedAsyncResult$ = this.twitterData();\n        this.logger.debug(this.fileName, `userFeeddata`);\n        this.logger.debug(this.fileName, this.userFeedAsyncResult$);\n        // tslint:disable-next-line: deprecation\n    }\n    public twitterData(): Observable<any> {\n        // Observable.forkJoin (RxJS 5) changes to just forkJoin() in RxJS 6\n        return forkJoin([\n            this.twitterService.getUserProfile(),\n            this.twitterService.getHomeTimeLine(),\n            this.twitterService.getUserTimeLine(),\n            this.twitterService.getUserMentionsTimeLine(),\n        ]).pipe(\n            catchError(async (error) => this.onGetFeedError(error)),\n            map((result) => tranformResult(result))\n        );\n    }\n\n    onGetFeedError = (error): void => {\n        this.logger.debug(this.fileName, `onGetFeedError`);\n        this.logger.debug(this.fileName, error);\n    };\n}\n\nexport function tranformResult(result) {\n    console.log(`tranformResult`);\n    console.log(`MainComponent`, result);\n    const userData: ITweetUserProfile = result[0];\n    const getHeadLinesData: ITweetUserHeadlines[] = result[1];\n    const getUserTimeLinesData: ITweetUserHeadlines[] = result[2];\n    const getMentionTimeLinesData: ITweetUserHeadlines[] = result[3];\n    console.log({\n        user: userData,\n        getHeadLines: getHeadLinesData,\n        getUserTimeLines: getUserTimeLinesData,\n        getMentionTimeLines: getMentionTimeLinesData,\n    });\n    return {\n        user: userData,\n        getHeadLines: getHeadLinesData,\n        getUserTimeLines: getUserTimeLinesData,\n        getMentionTimeLines: getMentionTimeLinesData,\n    };\n}\n","<ng-container *ngIf=\"(userFeedAsyncResult$ | async ) as userFeedAsyncResult\n  then userProfileTemplate;\n  else emptyTemplate\n\"></ng-container>\n\n\n<ng-template #userProfileTemplate>\n\n<div class=\"app-main\">\n\t<app-userprofile  [userprofiledata]=\"(userFeedAsyncResult$ | async)?.user\">\n\t</app-userprofile>\n\t<div class=\"app-main__centered\">\n\t\t<app-user-post [userheadlines]=\"(userFeedAsyncResult$ | async)?.getHeadLines\"\n\t\t[usertimelines]=\"(userFeedAsyncResult$ | async)?.getUserTimeLines\"\n\t\t[usermentionslines]=\"(userFeedAsyncResult$ | async)?.getMentionTimeLines\"\n\t\t></app-user-post>\n\t</div>\n</div>\n<router-outlet></router-outlet>\n</ng-template>\n\n<ng-template #emptyTemplate>\n\t<div class=\"app-main__empty-container\">\n\t\t Please configure the server settings to access Twitter API. Update below parameter in Server.js\n\t\t <ol>\n\t\t\t<li>consumer_key</li>\n\t\t\t<li>consumer_secret</li>\n\t\t\t<li>access_token</li>\n\t\t\t<li>access_token_secret</li>\n\t\t\t<li>bearer_token</li>\n\t\t  </ol>\n\t</div>\n  </ng-template>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Logger } from '../../core/logger.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpRequestService {\n  private header: HttpHeaders = new HttpHeaders({ responseType: 'JSON' });\n\n  constructor(private http: HttpClient, private logger: Logger) {\n    this.logger.debug(`HttpRequestService`, environment.serverUrl);\n   }\n\n  /**\n   * Gets http request service\n   * @param url \n   * @param [header] \n   * @returns get \n   */\n  public get(path: string, header?: object): Observable<Object> {\n    this.logger.debug(`HttpRequestService`, `get`);\n    this.logger.debug(`HttpRequestService`, environment.serverUrl + path);\n    header = header ?? this.header;\n    const url = environment.serverUrl + path;\n    return this.http.get(url, header);\n  }\n\n  /**\n   * Posts http request service\n   * @param url \n   * @param body \n   * @param [header] \n   * @returns post \n   */\n  public post(path: string, body: object, header?: object): Observable<Object> {\n    this.logger.debug(`HttpRequestService`, `post`);\n    this.logger.debug(`HttpRequestService`, body);\n    this.logger.debug(`HttpRequestService`, environment.serverUrl + path);\n    header = header ?? this.header;\n    const url = environment.serverUrl + path;\n    return this.http.post(url, body, header);\n  }\n\n  /**\n   * Puts http request service\n   * @param url \n   * @param [body] \n   * @param [header] \n   * @returns put \n   */\n  public put(path: string, body?: object, header?: object): Observable<Object> {\n    header = header ?? this.header;\n    const url = environment.serverUrl + path;\n    return this.http.put(url, body, header);\n  }\n\n  /**\n   * Deletes http request service\n   * @param url \n   * @param [header] \n   * @param [requestBody] \n   * @returns delete \n   */\n  public delete(path: string, header?: object, requestBody?: object): Observable<Object> {\n    const options = {\n      headers: header === undefined ? this.header : new HttpHeaders(header as { [key: string]: string | string[] }),\n      body: requestBody,\n    };\n    const url = environment.serverUrl + path;\n    return this.http.request('delete', url, options);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport enum LogLevel {\n  Off = 0,\n  Custom,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class Logger {\n  constructor() { }\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  public enableProductionMode() {\n    Logger.level = LogLevel.Error;\n  }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  public debug(source: string, ...objects: any[]) {\n    this.log(source, console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  public info(source: string, ...objects: any[]) {\n    // tslint:disable-next-line:no-console\n    this.log(source, console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  public warn(source: string, ...objects: any[]) {\n    this.log(source, console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  public error(source: string, ...objects: any[]) {\n    this.log(source, console.error, LogLevel.Error, objects);\n  }\n\n  /**\n   * @function log\n   * @param source\n   * @param func\n   * @param level\n   * @param objects\n   * @description log messages and events\n   */\n  private log(source: string, func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    const log = ['[' + source + '] ::'].concat(objects);\n    if (level <= Logger.level) {\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [source, level, objects]));\n    }\n  }\n}","import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-leftpane',\n  templateUrl: './leftpane.component.html',\n  styleUrls: ['./leftpane.component.css']\n})\nexport class LeftpaneComponent {\n\n  public isSidebarActive: boolean = false;\n\n  @Output()\n  public changeToggleEvent = new EventEmitter<string>();\n\n  /**\n   * @function callToggle\n   * @description emit left pane expand/collapse\n   */\n  public callToggle() {\n    this.isSidebarActive = !this.isSidebarActive;\n    this.changeToggleEvent.emit();\n  }\n\n}\n","<div class=\"dashboard_box\"> \n    <div class=\"sidebar_block\">\n        <div class=\"sidebar_content\" *ngIf=\"isSidebarActive\">\n            Left pane for navigation\n        </div>        \n    </div>\n    <div class=\"collapse-icon\">\n        <span id=\"side-nav-toggle-icon\" class=\"toggle-icon glyphicon\" (click)=\"callToggle()\"></span>\n    </div>\n</div>\n\n","<div class=\"app-user-feed__row app-user-feed__wrapper\">\n\t<ng-container *ngFor=\"let feedData of userfeeddata; let i = index;\">\n\t\t<div class=\"app-user-feed__container\">\n\t\t\t<img class=\"app-user-feed__profile-img\" *ngIf=\"feedData.user.profile_image_url\"\n\t\t\t\t[src]=\"feedData.user.profile_image_url\">\n\t\t\t<div class=\"app-user-feed__user-cont\">\n\t\t\t\t<span *ngIf=\"feedData.user.name\" class=\"app-user-feed__name\"> {{feedData.user.name}}\n\t\t\t\t\t<span *ngIf=\"feedData.user.screen_name\" class=\"app-user-feed__screen-name\">@\n\t\t\t\t\t\t{{feedData.user.screen_name}}</span>\n\t\t\t\t\t\t<span *ngIf=\"feedData.user.created_at\"\n\t\t\t\t\t\tclass=\"app-user-feed__created-at\">{{feedData.user.created_at | date :'hh':'UTC'}} hrs</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"app-user-feed__full-text\" [innerHtml]=\"this.sanitizeText(feedData.full_text)\"></div>\n\t\t\t<img *ngIf=\"feedData.user.profile_banner_url\" class=\"app-user-feed__banner\"\n\t\t\t\t[src]=\"feedData.user.profile_banner_url\">\n\t\t</div>\n\t</ng-container>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ITweetUserProfile } from '../../service';\nimport { Logger } from '../../../../core/logger.service';\nimport { DomSanitizer,  } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-user-feed',\n  templateUrl: './user-feed.component.html',\n  styleUrls: ['./user-feed.component.scss']\n})\nexport class UserFeedComponent implements OnInit {\n  @Input() \n  public userfeeddata: any = null;\n  public fullText: string;\n\n  constructor(private logger: Logger,protected sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    this.logger.debug(`UserFeedComponent`, `Input value ${this.userfeeddata}` );\n  }\n\n  \n  sanitizeUrl(contentHtml: string){\n    const urlRegex = /(https?:\\/\\/[^ ]*)/;\n    const url = contentHtml.match(urlRegex) ? contentHtml.match(urlRegex)[1] : null;\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n  \n\n\n  sanitizeText(contentText: string){\n    const urlRegex = /(?:https?|ftp):\\/\\/[\\n\\S]+/g;\n    const text = contentText.replace(urlRegex, '');\n    return this.sanitizer.bypassSecurityTrustHtml(text) ? this.sanitizer.bypassSecurityTrustHtml(text) : null;\n  }\n\n}\n","<dls-layout-container id=\"loader-container\" *ngIf=\"isLoading | async\" class=\"loader-overlay\">\n  <div class=\"text-xs-center\">\n    <!-- <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>  -->\n    <dls-progress-circular-indeterminate id=\"progress-loader\" class=\"loader\"></dls-progress-circular-indeterminate>\n  </div>\n</dls-layout-container>\n\n<!-- <div [hidden]=\"!isLoading\" class=\"text-xs-center\">\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>\n</div> -->\n  ","import { Component, Input } from '@angular/core';\nimport { LoaderService } from './service/loader.service';\nimport { Subject } from 'rxjs';\n\n/**\n *\n *\n * @export\n * @class AppLoaderComponent\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css'],\n})\nexport class AppLoaderComponent {\n  @Input()\n  public message: string | undefined;\n\n  public isLoading: Subject<boolean> = this.loaderService.isAppLoading;\n\n  /**\n   *Creates an instance of AppLoaderComponent.\n   * @param {LoaderService} loaderService\n   * @memberof AppLoaderComponent\n   */\n  public constructor(private loaderService: LoaderService) { }\n\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { HttpRequestService } from './http/http-request.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule, HttpClientModule, RouterModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true,\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy,\n    },\n    HttpRequestService\n  ],\n  exports: []\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './twitter/component';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    outlet: 'twitter-main'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeatureRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export * from './user-profile/user-profile.component';\nexport * from './user-post/user-post.component';\nexport * from './user-feed/user-feed.component';\nexport * from './main/main.component';\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\n *\n *\n * @export\n * @class LoaderService\n */\n@Injectable()\nexport class LoaderService {\n\n  // public isCompLoading = new Subject<boolean>();\n  public isAppLoading = new Subject<boolean>();\n\n  /**\n   * @function showBlockLoader\n   * @description emit to show app loader\n   */\n  public showBlockLoader() {\n    this.isAppLoading.next(true);\n  }\n  /**\n   * @function hideBlockLoader\n   * @description emit to hide app loader\n   */\n  public hideBlockLoader() {\n    this.isAppLoading.next(false);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Logger } from './logger.service';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  private fileName = 'route reusable';\n  public constructor( private _log: Logger) {\n    super();\n  }\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    this._log.debug(this.fileName, route);\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {\n    this._log.debug(this.fileName, route);\n    this._log.debug(this.fileName, detachedTree);\n  }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    this._log.debug(this.fileName, route);\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    this._log.debug(this.fileName, route);\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    this._log.debug(this.fileName, future);\n    this._log.debug(this.fileName, curr);\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n"],"sourceRoot":"webpack:///"}